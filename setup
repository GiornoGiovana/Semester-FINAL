 int happiness = 100;
 int wealth = 0;
 int grades;
 final int MAXCREDITHOURS;
 float happinessPotential[] = new int[14]; //starts at 50%, cant go above 100 or below 0. each index is a week, average all elements at the end for final happiness.
 int wealthPotential[] = new int[14]; //starts at $0,cumulative between weeks, so add all values at the end. At the conclusion of the game, if Grades is >= 85% and Happiness is >= 85%, Wealth potential increases by $62501 *(creditHours/12.0)
 int gradePotential[] = new int[14]; //since we need to average the grade potential at the end of each week, store each weeks grade potential in this array, starting with week 0
 int weekly_hoursWorked; //max is 40
 int weekly_creditHours; //cant be higher than MAXCREDITHOURS
 int weekly_leisure; //max is 90
 int weekly_hoursSleeping; //min 8, max 95
 int weekly_hoursStudying;
 int weekly_hoursVisitingAcademicResources; //Grades increase by 3% per hour spent; For every 2 hours, randomly increase or decrease Happiness by 2%, with a 50% probability of either case 
 int weekly_attentionInClas; //percent of time spent actively engaged in class


 void setup(){
  size(1000, 500);
  int num = 8;
  handles = new Handle[num];
  int hsize = 100;
  for (int i = 0; i < handles.length; i++) {
   handles[i] = new Handle(width/2, 40+i*50, 50-hsize/2, 20, handles);
  }
 }
